syntax = "proto3";

package appointment;

option go_package = "server/proto;appointment";

service AppointmentService {
    rpc createAppointment (AppointmentCreate) returns (AppointmentID);
    rpc requestAppointment (AppointmentRequest) returns (AppointmentResponse);
    rpc decideAppointment (AppointmentID) returns (AppointmentData);
    rpc deleteAppointment (AppointmentID) returns (Status);
    rpc getAppointment (AppointmentID) returns (AppointmentData);
    rpc getAppointmentsOfUser (UserID) returns (AppointmentsOfUser);
}

message Status{
    string status = 1;
    string message = 2;
}

message UserID {
    string uid = 1;
}

message AppointmentID {
    string appointmentid = 1;
}

message AppointmentCreate {
    string date = 1;
    string uid = 2;
    double duration = 3;
    double cost = 4;
    string animalid = 5;
    string reason = 6;
}

message AppointmentData {
    string appointmentid = 1;
    string date = 2;
    string uid = 3;
    double duration = 4;
    double cost = 5;
    string animalid = 6;
    string reason = 7;
}

message AppointmentsOfUser {
    repeated Appointment appointments = 1;
}

message AppointmentRequest {
    string uid = 1;
    string date = 2;
    string animalid = 3;
    string reason = 4;
}

message AppointmentResponse {
    string uid = 1;
    double duration = 2;
    double cost = 3;
    repeated AppointmentChoice possibleappointments = 4;
}

message AppointmentCancel {
    string appointmentid = 1;
    string uid = 2;
}

message AppointmentChoice {
    string appointmentid = 1;
    string date = 2;
}

message Appointment {
    string uid = 1;
    string date = 2;
    double duration = 3;
}